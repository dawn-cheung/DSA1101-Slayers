ylim = c(0, 0.6))
hist(male_FEV, freq = FALSE, main = paste("Histogram of Forced Expiratory Volume (FEV) by 0"),
xlab = "FEV",
ylab = "Frequency",
col = "red",
ylim = c(0, 0.6),
xlim = c(0, 5))
Fibo[1:2] = 1
for (i in 3:45){
Fibo[i] = Fibo[i-1] + Fibo[i-2]
}
print(Fibo)
Fibo[1:2] = 1
for (i in 3:45){
Fibo[i] = Fibo[i-1] + Fibo[i-2]
}
print(Fibo)
print(Fibo[40])
n = sum(Fibo <= 5000000) + 1; n
n = max(which(Fibo<=5000000)) + 1; n
plot(heighty, FEV, type = "n")
plot(heighty, fev_var, type = "n")
points(female ~ height[which(Sex==0)], col = "red", pch = 20)
female = FEV[which(Sex == 0)] #or FEV[Sex == 0] works also
female = FEV[which(Sex == 0)] #or FEV[Sex == 0] works also
FEV <- fev_var
#EVEN MORE LESS UNHINGED:
female = FEV[which(Sex == 0)] #or FEV[Sex == 0] works also
attach(Forced_Expiratory_Volume)
Forced_Expiratory_Volume <- read.csv("~/GitHub/DSA1101 Slayers/datasets/FEV.csv")
fev_var <- Forced_Expiratory_Volume$FEV
attach(Forced_Expiratory_Volume)
#Supervised Learning Methods
- The methods used in making predictions for the future
- x is the predictors, y is the outcome (response variable)
- It *predicts the response variable* in the future
setwd("~/GitHub/DSA1101 Slayers")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("~/GitHub/DSA1101 Slayers/Pictures/photo_topic 3 linear regression_w")
knitr::include_graphics("~/GitHub/DSA1101 Slayers/Pictures/photo_topic 3 linear regression_w.jpg")
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
library(tidyverse)
library(dplyr)
resale <- read.csv("~/GitHub/DSA1101 Slayers/Pictures/hdbresale_reg.csv")
# Enter code here
library(tidyverse)
library(dplyr)
resale <- read.csv("~/GitHub/DSA1101 Slayers/datasets/hdbresale_reg.csv")
head(resale[,2:7]) #removes 1st column (ID of flats)
resale = read.csv("C:/Data/hdbresale_reg.csv")
resale = read.csv("C:GitHub/DSA1101 Slayers/datasets/hdbresale_reg.csv")
resale = read.csv("C:/GitHub/DSA1101 Slayers/datasets/hdbresale_reg.csv")
resale = read.csv("C:~/GitHub/DSA1101 Slayers/datasets/hdbresale_reg.csv")
resale = read.csv("~/GitHub/DSA1101 Slayers/datasets/hdbresale_reg.csv")
resale$age = 2024 - resale$lease_commence_date # AGE OF THE FLAT to 2024
# create a new column for "resale" to calculate the age of the flat till year 2024
M1 = lm(resale_price ~ floor_area_sqm, data = resale)
summary(M1)
M2 = lm(resale_price ~ floor_area_sqm + age, data = resale)
summary(M2)
n = dim(resale)[1] # total number of rows/observations
n
sample(1:20)
index.train = sample(1:n)[1:(0.8*n)] #the [1:(0.8*n)] takes 80% of the scrambled numbers
train.data = resale[index.train, ]
test.data = resale[ - index.train, ] #rows not inside the index.train
# forming model based on the train set:
M3 = lm(resale_price ~ floor_area_sqm + age, data = train.data)
summary(M3)
# predict the response for test set:
prediction = predict(M3, test.data)
prediction
cbind(prediction, test.data$resale_price)
M4 = lm(resale_price ~ floor_area_sqm + age + flat_type, data = resale)
summary(M4)
M2$fitted.values
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
collegesdb = read.table("~/Github/DSA1101 Slayers/datasets/Colleges.txt", header = TRUE, sep = " ")
library(tidyverse)
collegesdb = read.table("~/Github/DSA1101 Slayers/datasets/Colleges.txt", header = TRUE, sep = " ", rm.a = TRUE)
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "", header = TRUE)
attach(collegesdb)
Acceptance
lm(Acceptance, SAT)
M = lm(x ~ y)
price = resale$resale_price
area = resale$floor_area_sqm
lm(price ~ area)$coeff
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "", header = TRUE)
attach(collegesdb)
Acceptance
#lm(Acceptance ~ SAT)
lm(SAT ~ Acceptance)
lm(SAT ~ Acceptance, data = collegesdb)
```{r, eval=TRUE,echo=TRUE}
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "", header = TRUE)
attach(collegesdb)
Acceptance
lm(SAT ~ Acceptance, data = collegesdb)
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "", header = TRUE)
attach(collegesdb)
Acceptance
lm(collegesdb$SAT ~ collegesdb$Acceptance, data = collegesdb)
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "", header = TRUE)
attach(collegesdb)
Acceptance
lm(collegesdb$SAT~collegesdb$Acceptance, data = collegesdb)
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "", header = TRUE)
attach(collegesdb)
scores = collegesdb$SAT
accept = collegesdb$Acceptance
lm(scores~accept)
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "", header = TRUE)
attach(collegesdb)
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
attach(collegesdb)
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
attach(collegesdb)
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
View(collegesdb)
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
attach(collegesdb)
dim(collegesdb)
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
?dim
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = ".", header = TRUE)
attach(collegesdb)
dim(collegesdb)
?dim
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
attach(collegesdb)
dim(collegesdb)
?dim
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb = read.table("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
library(tidyverse)
collegesdb = read.("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
library(tidyverse)
collegesdb = read("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
attach(collegesdb)
dim(collegesdb)
?dim
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb = read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "", header = TRUE)
attach(collegesdb)
dim(collegesdb)
?dim
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt")
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "", header = TRUE)
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "   ", header = TRUE)
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "  ", header = TRUE)
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "  ", header = TRUE)
library(tidyverse)
collegesdb <- read.table("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "  ", header = TRUE)
library(tidyverse)
collegesdb <- read.table("~/Github/DSA1101 Slayers/datasets/Colleges.txt")
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt")
str_split(collegesdb, "  ")
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\\", header = TRUE
str_split(collegesdb, "  ")
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\\", header = TRUE
scores = collegesdb$SAT
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\\", header = TRUE)
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\\", header = TRUE)
collegesdb
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt")
collegesdb
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt")
print(collegesdb)
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\\", header = TRUE)
collegesdb
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = \\, header = TRUE)
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "  ", header = TRUE)
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
collegesdb
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE)
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE)
collegesdb
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
price = resale$resale_price #regressor
area = resale$floor_area_sqm #predictor
lm(price ~ area)$coeff
hbd.model = lm(price ~ area)
summary(hdb.model)
price = resale$resale_price #regressor
area = resale$floor_area_sqm #predictor
lm(price ~ area)$coeff
hdb.model = lm(price ~ area)
summary(hdb.model)
hdb.model = lm(price ~ area)
summary(hdb.model)
summary(M)
hdb.model = lm(price ~ area)
summary(hdb.model)
summary(hdb.model)$f.stat
hdb.model = lm(price ~ area)
summary(hdb.model)
summary(hdb.model)$f.statistic
hdb.model = lm(price ~ area)
summary(hdb.model)
#OR just
summary(hdb.model)$fstatistic
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
lm(Acceptance ~ SAT)
gathering = c()
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
?M
print("equation is: y = ", M$intercept)
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
??M
print("equation is: y = ", M$intercept)
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
print("equation is: y hat = ", M$coefficients[1,1], " + ", M$coefficients[1,2], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
print("equation is: y hat = ", M$coefficients[1], " + ", M$coefficients[2], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", M$coefficients[1], " + ", M$coefficients[2], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", M$coefficients[intercept], " + ", M$coefficients[SAT], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", M$coefficients[1], " + ", M$coefficients[2], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", M$coefficients[1], " + ", M$coefficients[1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", M$coefficients.SAT, " + ", M$coefficients[1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
M$coefficients[1,]
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
M$coefficients[SAT]
#print("equation is: y hat = ", M$coefficients[], " + ", M$coefficients[1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
typeof(M$coefficients)
#print("equation is: y hat = ", M$coefficients[], " + ", M$coefficients[1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
M$coefficients$SAT
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
M$coefficients(SAT)
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
#print("equation is: y hat = ", M$coefficients[], " + ", M$coefficients[1], "x")
summary(M)$coefficients
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients[1,1]
#print("equation is: y hat = ", M$coefficients[], " + ", M$coefficients[1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", M$coefficients[[1]], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", M$coefficients[[SAT]], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
print("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", summary(M)$coefficients[1,2], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
print("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", summary(M)$coefficients[0,1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
print("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", summary(M)$coefficients[1,1], "x")
summary(M)$coefficients[1,1]
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
print("equation is: y hat = ", "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
print("equation is: y hat = "+ summary(M)$coefficients[1,1]+ " + "+ summary(M)$coefficients[1,1]+ "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
paste0("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", summary(M)$coefficients[1,1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
paste0("equation is: y hat = ", M$coefficients[1,1], " + ", summary(M)$coefficients[1,1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
paste0("equation is: y hat = ", M$coefficients[1], " + ", summary(M)$coefficients[1,1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
paste0("equation is: y hat = ", M$coefficients[2], " + ", summary(M)$coefficients[1,1], "x") #yay both work fine
sum(SAT)
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B1
B0 = Acceptance - B1*SAT
B0
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
library(tidyverse)
library(dplyr)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
#plan: get RSS first
#then derivative it??
#then solve for intercept and gradient???
B0 =
B1 = 0
gathering = c()
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B0 = -B1*SAT
B0
B0 = (sum(Acceptance*SAT) - B1(sum(SAT)^2))/(sum(SAT))
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B0 = (sum(Acceptance*SAT) - B1(sum(SAT)^2))/(sum(SAT))
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B0 = (sum(Acceptance*SAT) - B1*(sum(SAT)^2))/(sum(SAT))
paste0("equation is: y hat = ", B0, " + ", B1, "x")
library(tidyverse)
library(dplyr)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
#plan: get RSS first
#then derivative it??
#then solve for intercept and gradient???
B1 = (sum(Acceptance*SAT) + sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B0 = (sum(Acceptance*SAT) - B1*(sum(SAT)^2))/(sum(SAT))
paste0("equation is: y hat = ", B0, " + ", B1, "x")
library(tidyverse)
library(dplyr)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
#plan: get RSS first
#then derivative it??
#then solve for intercept and gradient???
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B0 = (sum(Acceptance*SAT) - B1*(sum(SAT)^2))/(sum(SAT))
paste0("equation is: y hat = ", B0, " + ", B1, "x")
library(tidyverse)
library(dplyr)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
#plan: get RSS first then derivative it?? then solve for intercept and gradient???
#ok no thats impossible how would u even get RSS direct
#B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
#B0 = (sum(Acceptance*SAT) - B1*(sum(SAT)^2))/(sum(SAT))
#those didnt work
xbar = (1/length(SAT))*sum(SAT)
ybar = (1/length(Acceptance))*sum(Acceptance)
B1 = (sum(SAT-xbar)*sum(Acceptance-ybar))/sum((SAT-xbar)^2)
B0 = "lol idk"
paste0("equation is: y hat = ", B0, " + ", B1, "x")
?function
