accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt")
collegesdb
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt")
print(collegesdb)
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\\", header = TRUE)
collegesdb
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = \\, header = TRUE)
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "  ", header = TRUE)
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = " ", header = TRUE)
collegesdb
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE)
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE)
collegesdb
scores = collegesdb$SAT
accept = collegesdb$Acceptance
scores
price = resale$resale_price #regressor
area = resale$floor_area_sqm #predictor
lm(price ~ area)$coeff
hbd.model = lm(price ~ area)
summary(hdb.model)
price = resale$resale_price #regressor
area = resale$floor_area_sqm #predictor
lm(price ~ area)$coeff
hdb.model = lm(price ~ area)
summary(hdb.model)
hdb.model = lm(price ~ area)
summary(hdb.model)
summary(M)
hdb.model = lm(price ~ area)
summary(hdb.model)
summary(hdb.model)$f.stat
hdb.model = lm(price ~ area)
summary(hdb.model)
summary(hdb.model)$f.statistic
hdb.model = lm(price ~ area)
summary(hdb.model)
#OR just
summary(hdb.model)$fstatistic
library(tidyverse)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
lm(Acceptance ~ SAT)
gathering = c()
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
?M
print("equation is: y = ", M$intercept)
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
??M
print("equation is: y = ", M$intercept)
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
print("equation is: y hat = ", M$coefficients[1,1], " + ", M$coefficients[1,2], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
print("equation is: y hat = ", M$coefficients[1], " + ", M$coefficients[2], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", M$coefficients[1], " + ", M$coefficients[2], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", M$coefficients[intercept], " + ", M$coefficients[SAT], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", M$coefficients[1], " + ", M$coefficients[2], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", M$coefficients[1], " + ", M$coefficients[1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", M$coefficients.SAT, " + ", M$coefficients[1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
M$coefficients[1,]
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
M$coefficients[SAT]
#print("equation is: y hat = ", M$coefficients[], " + ", M$coefficients[1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
typeof(M$coefficients)
#print("equation is: y hat = ", M$coefficients[], " + ", M$coefficients[1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
M$coefficients$SAT
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
M$coefficients(SAT)
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
#print("equation is: y hat = ", M$coefficients[], " + ", M$coefficients[1], "x")
summary(M)$coefficients
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients[1,1]
#print("equation is: y hat = ", M$coefficients[], " + ", M$coefficients[1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", M$coefficients[[1]], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
print("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", M$coefficients[[SAT]], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
print("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", summary(M)$coefficients[1,2], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
print("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", summary(M)$coefficients[0,1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
print("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", summary(M)$coefficients[1,1], "x")
summary(M)$coefficients[1,1]
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
print("equation is: y hat = ", "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
print("equation is: y hat = "+ summary(M)$coefficients[1,1]+ " + "+ summary(M)$coefficients[1,1]+ "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
paste0("equation is: y hat = ", summary(M)$coefficients[1,1], " + ", summary(M)$coefficients[1,1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
paste0("equation is: y hat = ", M$coefficients[1,1], " + ", summary(M)$coefficients[1,1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
paste0("equation is: y hat = ", M$coefficients[1], " + ", summary(M)$coefficients[1,1], "x")
# Enter code here
M = lm(Acceptance ~ SAT)
summary(M)
M$coefficients
summary(M)$coefficients
summary(M)$coefficients[1,1]
paste0("equation is: y hat = ", M$coefficients[2], " + ", summary(M)$coefficients[1,1], "x") #yay both work fine
sum(SAT)
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B1
B0 = Acceptance - B1*SAT
B0
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
library(tidyverse)
library(dplyr)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
#plan: get RSS first
#then derivative it??
#then solve for intercept and gradient???
B0 =
B1 = 0
gathering = c()
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B0 = -B1*SAT
B0
B0 = (sum(Acceptance*SAT) - B1(sum(SAT)^2))/(sum(SAT))
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B0 = (sum(Acceptance*SAT) - B1(sum(SAT)^2))/(sum(SAT))
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B0 = (sum(Acceptance*SAT) - B1*(sum(SAT)^2))/(sum(SAT))
paste0("equation is: y hat = ", B0, " + ", B1, "x")
library(tidyverse)
library(dplyr)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
#plan: get RSS first
#then derivative it??
#then solve for intercept and gradient???
B1 = (sum(Acceptance*SAT) + sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B0 = (sum(Acceptance*SAT) - B1*(sum(SAT)^2))/(sum(SAT))
paste0("equation is: y hat = ", B0, " + ", B1, "x")
library(tidyverse)
library(dplyr)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
#plan: get RSS first
#then derivative it??
#then solve for intercept and gradient???
B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
B0 = (sum(Acceptance*SAT) - B1*(sum(SAT)^2))/(sum(SAT))
paste0("equation is: y hat = ", B0, " + ", B1, "x")
library(tidyverse)
library(dplyr)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
#plan: get RSS first then derivative it?? then solve for intercept and gradient???
#ok no thats impossible how would u even get RSS direct
#B1 = (sum(Acceptance*SAT) - sum(Acceptance)*sum(SAT))/(sum(SAT^2)-(sum(SAT)^2)/n)
#B0 = (sum(Acceptance*SAT) - B1*(sum(SAT)^2))/(sum(SAT))
#those didnt work
xbar = (1/length(SAT))*sum(SAT)
ybar = (1/length(Acceptance))*sum(Acceptance)
B1 = (sum(SAT-xbar)*sum(Acceptance-ybar))/sum((SAT-xbar)^2)
B0 = "lol idk"
paste0("equation is: y hat = ", B0, " + ", B1, "x")
?function
knitr::opts_chunk$set(echo = TRUE)
F3 <- function(salary, years_goal, price) {
#price = 1200000 #cost of house
down_payment = price*0.25
saved = 10000
month_counter = years_goal * 12
down_payment = down_payment-(10000)*(1.02^month_counter)
print(down_payment)
dem_interest = 0
for (i in 1:(month_counter - 1)){
dem_interest = dem_interest + (1.02^i)
}
final_p = ((down_payment/dem_interest)/salary)*100
paste0("you will need to save ",final_p,"% of your salary")
}
F3(7000, 5, 1200000)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
#plan: get RSS first then derivative it?? then solve for intercept and gradient???
#ok no thats impossible how would u even get RSS direct
B1 = (sum(Acceptance*SAT) - mean(Acceptance)*sum(SAT))/(sum(SAT^2)-mean(SAT)*sum(SAT))
B0 = (sum(Acceptance*SAT) - B1*(sum(SAT)^2))/(sum(SAT))
#those didnt work
xbar = (1/length(SAT))*sum(SAT)
ybar = (1/length(Acceptance))*sum(Acceptance)
B1 = (sum(SAT-xbar)*sum(Acceptance-ybar))/sum((SAT-xbar)^2)
B0 = "lol idk"
paste0("equation is: y hat = ", B0, " + ", B1, "x")
simple <- function(x, y) {
B1 = (sum(x*y) - mean(y)*sum(u))/(sum(x^2)-mean(x)*sum(x))
B0 = mean(y)-(B1*mean(x))
paste0("equation is: y hat = ", B0, " + ", B1, "x")
}
xbar = (1/length(SAT))*sum(SAT)
ybar = (1/length(Acceptance))*sum(Acceptance)
B1 = (sum(SAT-xbar)*sum(Acceptance-ybar))/sum((SAT-xbar)^2)
B0 = "lol idk"
simple(SAT, Acceptance)
library(tidyverse)
library(dplyr)
collegesdb <- read.csv("~/Github/DSA1101 Slayers/datasets/Colleges.txt", sep = "\t", header = TRUE) #THIS THE "\t" PLS HOW
attach(collegesdb)
#plan: get RSS first then derivative it?? then solve for intercept and gradient???
#ok no thats impossible how would u even get RSS direct
B1 = (sum(Acceptance*SAT) - mean(Acceptance)*sum(SAT))/(sum(SAT^2)-mean(SAT)*sum(SAT))
B0 = (sum(Acceptance*SAT) - B1*(sum(SAT)^2))/(sum(SAT))
#those didnt work
simple <- function(x, y) {
B1 = (sum(x*y) - mean(y)*sum(x))/(sum(x^2)-mean(x)*sum(x))
B0 = mean(y)-(B1*mean(x))
paste0("equation is: y hat = ", B0, " + ", B1, "x")
}
xbar = (1/length(SAT))*sum(SAT)
ybar = (1/length(Acceptance))*sum(Acceptance)
B1 = (sum(SAT-xbar)*sum(Acceptance-ybar))/sum((SAT-xbar)^2)
B0 = "lol idk"
simple(SAT, Acceptance)
paste0("equation is: y hat = ", B0, " + ", B1, "x")
?lm
setwd("~/GitHub/DSA1101 Slayers")
knitr::opts_chunk$set(echo = TRUE)
data.frame(test.y, knn.pred)[1:50]
# Enter code here
library(class)
library(dplyr)
market <- read.csv("~/GitHub/DSA1101 Slayers/datasets/Smarket.csv")
head(market)
# we see that X is the row number,
# Lag 1 to 5, the percentage returns for the 5 prev days => these are our predictors
dim(market) #get no. rows and columns
attach(market)
#indexes of all the rows where Year < 2005
index.train = which(Year < 2005) #returns a vector
#create data frame that has all the rows before 2005
train.data = market[index.train, ] #REMEMBER THE ,] BC MARKET IS NOT A LIST, ITS A DATAFRAME so u need specify the rows and columns
# leave blank ie [index.train,(empty)] = returns all columns
#the rest of the rows go to test data
test.data = market[-index.train, ]
dim(train.data); dim(test.data) #dim is dimentions hehe
#now we're filtering by all the columns we're gonna use, for both test and train datasets. idk why we're doing this after spiltting them, OK NOW I GETS cus we're gonna split them further into predictors and responses hehe
#REMEMBER THESE ARE DATAFRAMES SO SPECIFY ROW AND COLUMN
train.x = train.data[ ,c("Lag1", "Lag2", "Lag3", "Lag4", "Lag5")]
test.x = test.data[ ,c("Lag1", "Lag2", "Lag3", "Lag4", "Lag5")]
#now get the responses to train & test the algorithm
train.y = train.data[ ,c("Direction")]
test.y = test.data[ ,c("Direction")] #these are the 'real' responses, NOTE it is NOT needed for knn()
library(class)
knn.pred = knn(train.x, test.x, train.y, k = 1)
knn.pred #returns the prediction for the response of the test points i.e. predictions for text.x
data.frame(test.y, knn.pred)[1:50]
data.frame(test.y, knn.pred) %>%
slice(1:50)
table(test.y, knn.pred)
knitr::opts_chunk$set(echo = TRUE)
#enter code here
library(class)
housey = read.csv("~/GitHub/DSA1101 Slayers/datasets/house_selling_prices_FL.csv")
attach(housey)
#M1 = lm(dollar ~ area)
#enter code here
library(class)
housey = read.csv("~/GitHub/DSA1101 Slayers/datasets/house_selling_prices_FL.csv")
attach(housey)
glimpse(housey)
#enter code here
library(class)
library(tidyverse)
housey = read.csv("~/GitHub/DSA1101 Slayers/datasets/house_selling_prices_FL.csv")
attach(housey)
glimpse(housey)
#M1 = lm(dollar ~ area)
#enter code here
library(class)
library(tidyverse)
housey = read.csv("~/GitHub/DSA1101 Slayers/datasets/house_selling_prices_FL.csv")
attach(housey)
M1 = lm(price ~ size)
#enter code here
library(class)
library(tidyverse)
housey = read.csv("~/GitHub/DSA1101 Slayers/datasets/house_selling_prices_FL.csv")
attach(housey)
glimpse(housey)
M1 = lm(price ~ size)
#enter code here
library(class)
library(tidyverse)
housey = read.csv("~/GitHub/DSA1101 Slayers/datasets/house_selling_prices_FL.csv")
attach(housey)
dim(price)
dim(size)
M1 = lm(price ~ size)
#enter code here
library(class)
library(tidyverse)
housey = read.csv("~/GitHub/DSA1101 Slayers/datasets/house_selling_prices_FL.csv")
attach(housey)
price
size
M1 = lm(price ~ size)
setwd("~/GitHub/DSA1101 Slayers/datasets")
setwd("~/GitHub/DSA1101 Slayers")
#enter code here
library(class)
library(tidyverse)
housey = read.csv("~/GitHub/DSA1101 Slayers/datasets/house_selling_prices_FL.csv")
attach(housey)
?lm
M1 = lm(price ~ size)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(class)
bankie = read.csv("~/Github/DSA1101 Slayers/datasets/bank-sample.csv")
glimpse(bankie)
library(tidyverse)
library(class)
bankie = read.csv("~/Github/DSA1101 Slayers/datasets/bank-sample.csv")
attatch(bankie)
library(tidyverse)
library(class)
bankie = read.csv("~/Github/DSA1101 Slayers/datasets/bank-sample.csv")
attach(bankie)
glimpse(bankie)
dim(bankie)
library(tidyverse)
library(class)
bankie = read.csv("~/Github/DSA1101 Slayers/datasets/bank-sample.csv")
attach(bankie)
head(bankie)
dim(bankie)
library(tidyverse)
library(class)
bankdata = read.csv("~/Github/DSA1101 Slayers/datasets/bank-sample.csv")
attach(bankdata)
table(job)
install.packages("rpart")
library(tidyverse)
library(class)
library(rpart)
bankdata = read.csv("~/Github/DSA1101 Slayers/datasets/bank-sample.csv")
attach(bankdata)
fit <- rpart(subscribed ~ job + marital + education + default + housing + loan + contact + poutcome,
method = class,
data = bankdata,
control = rpart.control(minsplit = 1),
parms = list(split = "information"))
library(tidyverse)
library(class)
library(rpart)
bankdata = read.csv("~/Github/DSA1101 Slayers/datasets/bank-sample.csv")
attach(bankdata)
fit <- rpart(subscribed ~ job + marital + education + default + housing + loan + contact + poutcome,
method = "class",
data = bankdata,
control = rpart.control(minsplit = 1),
parms = list(split = "information"))
library(tidyverse)
library(class)
library(rpart)
bankdata = read.csv("~/Github/DSA1101 Slayers/datasets/bank-sample.csv")
attach(bankdata)
fit <- rpart(subscribed ~ job + marital + education + default + housing + loan + contact + poutcome,
method = "class",
data = bankdata,
control = rpart.control(minsplit = 1),
parms = list(split = "information"))
fit
library(tidyverse)
library(class)
library(rpart)
bankdata = read.csv("~/Github/DSA1101 Slayers/datasets/bank-sample.csv")
attach(bankdata)
fit <- rpart(subscribed ~ job + marital + education + default + housing + loan + contact + poutcome,
method = "class",
data = bankdata,
control = rpart.control(minsplit = 1),
parms = list(split = "information"))
fit
summary(fit)
install.packages("rpart.plot")
knitr::opts_chunk$set(echo = TRUE)
market <- read.csv("~/GitHub/DSA1101 Slayers/datasets/Smarket.csv")
attach(market)
scale(lap_1) # to standardise all the predictors (the x es)
knitr::opts_chunk$set(echo = TRUE)
library(rpart)
library(rpart.plot) #remember its a diff package as rpart!!
play_decsion = read.csv("~/Github/DSA1101 Slayers/datasets/DTdata.csv")
attach(play_decsion)
