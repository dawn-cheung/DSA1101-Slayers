digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
#CATAGORICAL: Relationship between hypertension and diabetes
dihyp = table(diabetes, hypertension); dihyp
dihyp = prop.table(dihyp, "hypertension"); dihyp
#CONTINUOUS: Relationship between hypertension and diabetes
boxplot(bmi ~ diabetes, xlab = "bmi", col = "blue")
#CONTINUOUS: Relationship between hypertension and diabetes
boxplot(bmi ~ diabetes, xlab = "diabetes", col = "blue")
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
#NO Odds Ratio
barplot(diabetes ~ gender)
#NO Odds Ratio
barplot(gender)
digen = table(diabetes, gender); digen
barplot(digen)
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
barplot(digen,
main = "Proportion of Diabetes Patients Across the Different Genders",
ylab = "Genders",
col = "darkred",
horiz = TRUE)
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
barplot(digen,
main = "Proportion of Diabetes Patients Across the Different Genders",
ylab = "Genders",
col = c("red", "blue"))
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
barplot(digen,
main = "Proportion of Diabetes Patients Across the Different Genders",
ylab = "Genders",
col = c("red", "blue"))
legend(x = "topright",
legend = c("1", "0"))
text(1500, -1.5, "1 = diabetic, 0 = not diabetic")
#NO Odds Ratio
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
barplot(digen,
main = "Proportion of Diabetes Patients Across the Different Genders",
ylab = "Genders",
col = c("red", "blue"))
legend(x = "topright",
legend = c("0", "1"))
text(150, -1.5, "1 = diabetic, 0 = not diabetic")
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
barplot(digen,
main = "Proportion of Diabetes Patients Across the Different Genders",
ylab = "Genders",
col = c("red", "blue"))
legend(x = "bottomright",
legend = c("0", "1"))
text(150, -1.5, "1 = diabetic, 0 = not diabetic")
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
barplot(digen,
main = "Proportion of Diabetes Patients Across the Different Genders",
ylab = "Genders",
col = c("darkred", "blue"))
legend(x = "bottomright",
legend = c("0", "1"),
fill = c("darkred", "blue"))
text(150, -1.5, "1 = diabetic, 0 = not diabetic")
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
barplot(digen,
main = "Proportion of Diabetes Patients Across the Different Genders",
xlab = "Genders",
col = c("darkred", "blue"),
legend.text = rownames(digen), # Legend values
args.legend = list(x = "bottomright", inset = c(-0.20, 0)))
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
barplot(digen,
main = "Proportion of Diabetes Patients Across the Different Genders",
xlab = "Genders",
col = c("darkred", "blue"))
legend(x = "bottomright",
legend = c("0", "1"),
fill = c("darkred", "blue"),
)
dihyp = table(diabetes, hypertension); dihyp
dihyp = prop.table(dihyp, "hypertension"); dihyp
barplot(dihyp,
main = "Proportion of Diabetes Patients With and Without Hypertension",
xlab = "Hypertension",
col = c("darkred", "blue"))
legend(x = "bottomright",
legend = c("0", "1"),
fill = c("darkred", "blue"),
)
hist(bmi ~ diabetes)
hist(diabetes ~ diabetes)
#CONTINUOUS: Relationship between BMI and diabetes
hist(bmi)
dihyp = table(diabetes, hypertension); dihyp
dihyp = prop.table(dihyp, "hypertension"); dihyp
barplot(dihyp,
main = "Proportion of Diabetes Patients With and Without Hypertension",
xlab = "Hypertension",
col = c("darkred", "blue"))
legend(x = "bottomright",
legend = c("0", "1"),
fill = c("darkred", "blue"),
)
dihea = table(diabetes, heart_disease); dihea
dihea = prop.table(dihea, "heart_disease"); dihea
barplot(dihea,
main = "Proportion of Diabetes Patients With and Without Heart Disease",
xlab = "Heart Disease",
col = c("darkred", "blue"))
#CATAGORICAL: Heart disease
dihea = table(diabetes, heart_disease); dihea
dihea = prop.table(dihea, "heart_disease"); dihea
barplot(dihea,
main = "Proportion of Diabetes Patients With and Without Heart Disease",
xlab = "Heart Disease",
col = c("darkred", "blue"))
#CATAGORICAL: Smoking history
dihist = table(diabetes, smoking_history); dihist
dihist = prop.table(dihist, "smoking_history"); dihist
barplot(dihist,
main = "Proportion of Diabetes Patients Across Different Smoking Histories",
xlab = "Heart Disease",
col = c("darkred", "blue"))
#CONTINUOUS: BMI
hist(bmi)
boxplot(bmi ~ diabetes, xlab = "diabetes", col = "blue")
dihyp = prop.table(dihyp, "hypertension"); dihyp
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
dihea = table(diabetes, heart_disease); dihea
dihea = prop.table(dihea, "heart_disease"); dihea
dihist = prop.table(dihist, "smoking_history"); dihist
library(tidyverse)
library(dplyr)
library(class)
library(rpart)
library(rpart.plot)
library(e1071)
library(ROCR)
set.seed(1101)
data = read.csv("~/Github/DSA1101 Slayers/datasets/diabetes-dataset.csv")
glimpse(data)
data$gender = as.factor(data$gender)
data$hypertension = as.factor(data$hypertension)
data$heart_disease = as.factor(data$heart_disease)
data$smoking_history = as.factor(data$smoking_history)
data$diabetes = as.factor(data$diabetes)
glimpse(data)
attach(data)
min(age);max(age)
min(bmi);max(bmi)
min(HbA1c_level);max(HbA1c_level)
min(blood_glucose_level);max(blood_glucose_level)
levels(smoking_history)
#CATAGORICAL: Gender
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
barplot(digen,
main = "Proportion of Diabetes Patients Across Different Genders",
xlab = "Genders",
col = c("darkred", "blue"))
#Among females, 7.62% of them have diabetes.
#Among males, 9.75% of them have diabetes.
#Among transgender individuals, 0.00% of them have diabetes.
#NO Odds Ratio
#CATAGORICAL: Hypertension
dihyp = table(diabetes, hypertension); dihyp
dihyp = prop.table(dihyp, "hypertension"); dihyp
barplot(dihyp,
main = "Proportion of Diabetes Patients With and Without Hypertension",
xlab = "Hypertension",
col = c("darkred", "blue"))
#Among those with hypertension, 27.9% of them have diabetes.
#Among those without hypertension, 6.93% of them have diabetes.
#CATAGORICAL: Heart disease
dihea = table(diabetes, heart_disease); dihea
dihea = prop.table(dihea, "heart_disease"); dihea
barplot(dihea,
main = "Proportion of Diabetes Patients With and Without Heart Disease",
xlab = "Heart Disease",
col = c("darkred", "blue"))
#Among those with heart disease, 32.1% of them have diabetes.
#Among those without heart disease, 7.53% of them have diabetes.
#CATAGORICAL: Smoking history
dihist = table(diabetes, smoking_history); dihist
dihist = prop.table(dihist, "smoking_history"); dihist
barplot(dihist,
main = "Proportion of Diabetes Patients Across Different Smoking Histories",
xlab = "Heart Disease",
col = c("darkred", "blue"))
#CONTINUOUS: BMI
hist(bmi)
boxplot(bmi ~ diabetes, xlab = "diabetes", col = "blue")
M1 = lm(diabetes ~ gender + age + hypertension + heart_disease + smoking_history + bmi + HbA1c_level + blood_glucose_level,
data = data)
summary(M1)
M1 = lm(diabetes ~ .,
data = data)
summary(M1)
standardized.X= scale(data[,-9])
standardized.X= scale(data[,1:8])
M1 = lm(diabetes ~ age + hypertension + heart_disease + bmi + HbA1c_level + blood_glucose_level,
data = data)
summary(M1)
summary(M1)
summary(M2)
M1 = lm(diabetes ~ age + hypertension,
data = data)
M2 = lm(diabetes ~ heart_disease + bmi,
data = data)
M3 = lm(diabetes ~HbA1c_level + blood_glucose_level,
data = data)
summary(M1)
summary(M2)
M2 = lm(diabetes ~ heart_disease,
data = data)
summary(M2)
data = read.csv("~/Github/DSA1101 Slayers/datasets/diabetes-dataset.csv")
attach(data)
M1 = lm(diabetes ~ age + hypertension + heart_disease + bmi + HbA1c_level + blood_glucose_level,
data = data)
summary(M1)
data$diabetes = as.factor(data$diabetes)
attach(data)
M1 = lm(diabetes ~ age + hypertension + heart_disease + bmi + HbA1c_level + blood_glucose_level,
data = data)
data = read.csv("~/Github/DSA1101 Slayers/datasets/diabetes-dataset.csv")
attach(data)
data$gender = as.factor(data$gender)
data$hypertension = as.factor(data$hypertension)
data$heart_disease = as.factor(data$heart_disease)
data$smoking_history = as.factor(data$smoking_history)
attach(data)
M1 = lm(diabetes ~ age + hypertension + heart_disease + bmi + HbA1c_level + blood_glucose_level,
data = data)
summary(M1)
fit <- rpart(diabetes ~ .,
method = "class",
data = bankdata,
control = rpart.control(minsplit = 1),
parms = list(split = "information"))
data$gender = as.factor(data$gender)
data$hypertension = as.factor(data$hypertension)
data$heart_disease = as.factor(data$heart_disease)
data$smoking_history = as.factor(data$smoking_history)
data$diabetes = as.factor(data$diabetes)
glimpse(data)
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
control = rpart.control(minsplit = 1),
parms = list(split = "information"))
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
control = rpart.control(minsplit = 1),
parms = list(split = "information"))
library(rpart)
library(rpart.plot)
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
control = rpart.control(minsplit = 1),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
rpart.plot(fit , clip.right.labs =FALSE , varlen =0, faclen =0)
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
control = rpart.control(minsplit = 1),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
rpart.control(maxdepth = 1),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
rpart.control(maxdepth = 5),
parms = list(split = "information"))
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
rpart.control(maxdepth = 3),
parms = list(split = "information"))
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
rpart.control(maxdepth = 1),
parms = list(split = "information"))
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
control = rpart.control(maxdepth = 5),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
control = rpart.control(minsplit = 1),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
fit <- rpart(diabetes ~ .,
method = "class",
data = data,
control = rpart.control(cp = 0.001),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
fit <- rpart(diabetes ~ age + hypertension + heart_disease + bmi + HbA1c_level + blood_glucose_level,
method = "class",
data = data,
control = rpart.control(cp = 0.001),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
fit <- rpart(diabetes ~ age + hypertension + heart_disease + bmi,
method = "class",
data = data,
control = rpart.control(cp = 0.001),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
dihyp = table(diabetes, hypertension); dihyp
dihyp = prop.table(dihyp, "hypertension"); dihyp
barplot(dihyp,
main = "Proportion of Diabetes Patients With and Without Hypertension",
xlab = "Hypertension",
col = c("darkred", "blue"))
wohyp = dihyp[1,2] / dihyp[1,1] #odds of success without hypertension
whyp = dihyp[2,2] / dihyp[2,1] #odds of success with hypertension
OR = whyp / wohyp
OR
dihyp[1,2] + dihyp[1,1]
dihyp[2,1] + dihyp[1,1]
dihyp[1,2] + dihyp[2,2]
dihyp[2,2] + dihyp[1,2]
wohyp = dihyp[2,1] / dihyp[1,1] #odds of success without hypertension
whyp = dihyp[2,2] / dihyp[1,2] #odds of success with hypertension
OR = whyp / wohyp; OR
wohyp = dihea[2,1] / dihea[1,1] #odds of success without hypertension
whyp = dihea[2,2] / dihea[1,2] #odds of success with hypertension
OR = dihea / dihea; OR
wohea = dihea[2,1] / dihea[1,1] #odds of success without heart disease
whea = dihea[2,2] / dihea[1,2] #odds of success with heart disease
OR = wohea / whea; OR
dihea = prop.table(dihea, "heart_disease"); dihea
dihea = table(diabetes, heart_disease); dihea
dihea = prop.table(dihea, "heart_disease"); dihea
barplot(dihea,
main = "Proportion of Diabetes Patients With and Without Heart Disease",
xlab = "Heart Disease",
col = c("darkred", "blue"))
#Among those with heart disease, 32.1% of them have diabetes.
#Among those without heart disease, 7.53% of them have diabetes.
wohea = dihea[2,1] / dihea[1,1] #odds of success without heart disease
whea = dihea[2,2] / dihea[1,2] #odds of success with heart disease
OR = wohea / whea; OR
dihea = table(diabetes, heart_disease); dihea
dihea = prop.table(dihea, "heart_disease"); dihea
barplot(dihea,
main = "Proportion of Diabetes Patients With and Without Heart Disease",
xlab = "Heart Disease",
col = c("darkred", "blue"))
#Among those with heart disease, 32.1% of them have diabetes.
#Among those without heart disease, 7.53% of them have diabetes.
wohea = dihea[2,1] / dihea[1,1] #odds of success without heart disease
whea = dihea[2,2] / dihea[1,2] #odds of success with heart disease
OR = whea / wohea; OR
hist(bmi)
boxplot(bmi ~ diabetes, xlab = "diabetes", col = "blue")
hist(HbA1c_level)
boxplot(HbA1c_level ~ diabetes, xlab = "diabetes", col = "blue")
hist(blood_glucose_level)
boxplot(blood_glucose_level ~ diabetes, xlab = "diabetes", col = "blue")
hist(age)
boxplot(age ~ diabetes, xlab = "diabetes", col = "blue")
dihist = table(diabetes, smoking_history); dihist
dihist = prop.table(dihist, "smoking_history"); dihist
barplot(dihist,
main = "Proportion of Diabetes Patients Across Different Smoking Histories",
xlab = "Heart Disease",
col = c("darkred", "blue"))
summary(bmi ~ diabetes)
median(female ~ diabetes)
median(bmi ~ diabetes)
aggie = boxplot(age ~ diabetes, xlab = "diabetes", col = "blue"); aggie
library(tidyverse)
library(dplyr)
library(class)
library(rpart)
library(rpart.plot)
library(e1071)
library(ROCR)
set.seed(1101)
data = read.csv("~/Github/DSA1101 Slayers/datasets/diabetes-dataset.csv")
glimpse(data)
data$gender = as.factor(data$gender)
data$hypertension = as.factor(data$hypertension)
data$heart_disease = as.factor(data$heart_disease)
data$smoking_history = as.factor(data$smoking_history)
data$diabetes = as.factor(data$diabetes)
glimpse(data)
attach(data)
min(age);max(age)
min(bmi);max(bmi)
min(HbA1c_level);max(HbA1c_level)
min(blood_glucose_level);max(blood_glucose_level)
levels(smoking_history)
#CATAGORICAL: Gender
digen = table(diabetes, gender); digen
digen = prop.table(digen, "gender"); digen
barplot(digen,
main = "Proportion of Diabetes Patients Across Different Genders",
xlab = "Genders",
col = c("darkred", "blue"))
#Among females, 7.62% of them have diabetes.
#Among males, 9.75% of them have diabetes.
#Among transgender individuals, 0.00% of them have diabetes.
#NO Odds Ratio
#CATAGORICAL: Hypertension
dihyp = table(diabetes, hypertension); dihyp
dihyp = prop.table(dihyp, "hypertension"); dihyp
barplot(dihyp,
main = "Proportion of Diabetes Patients With and Without Hypertension",
xlab = "Hypertension",
col = c("darkred", "blue"))
#Among those with hypertension, 27.9% of them have diabetes.
#Among those without hypertension, 6.93% of them have diabetes.
#odds ratio
wohyp = dihyp[2,1] / dihyp[1,1] #odds of success without hypertension
whyp = dihyp[2,2] / dihyp[1,2] #odds of success with hypertension
OR = whyp / wohyp; OR
#The odds of having diabetes while having hypertension is 5.20 times the odds of having diabetes without having hypertension.
#CATAGORICAL: Heart disease
dihea = table(diabetes, heart_disease); dihea
dihea = prop.table(dihea, "heart_disease"); dihea
barplot(dihea,
main = "Proportion of Diabetes Patients With and Without Heart Disease",
xlab = "Heart Disease",
col = c("darkred", "blue"))
#Among those with heart disease, 32.1% of them have diabetes.
#Among those without heart disease, 7.53% of them have diabetes.
wohea = dihea[2,1] / dihea[1,1] #odds of success without heart disease
whea = dihea[2,2] / dihea[1,2] #odds of success with heart disease
OR = whea / wohea; OR
#The odds of having diabetes while having heart disease is 5.82 times the odds of having diabetes without having heart disease.
#CATAGORICAL: Smoking history
dihist = table(diabetes, smoking_history); dihist
dihist = prop.table(dihist, "smoking_history"); dihist
barplot(dihist,
main = "Proportion of Diabetes Patients Across Different Smoking Histories",
xlab = "Heart Disease",
col = c("darkred", "blue"))
#median(bmi)
#IQR(female)
#summary(bmi ~ diabetes)
#var(female)
#CONTINUOUS: BMI
hist(bmi)
boxplot(bmi ~ diabetes, xlab = "diabetes", col = "blue")
#CONTINUOUS: HbA1c_level
hist(HbA1c_level)
boxplot(HbA1c_level ~ diabetes, xlab = "diabetes", col = "blue")
#CONTINUOUS: blood_glucose_level
hist(blood_glucose_level)
boxplot(blood_glucose_level ~ diabetes, xlab = "diabetes", col = "blue")
#CONTINUOUS: age
hist(age)
aggie = boxplot(age ~ diabetes, xlab = "diabetes", col = "blue"); aggie
outtie  = aggie$out; ottie
hist(age)
aggie = boxplot(age ~ diabetes, xlab = "diabetes", col = "blue"); aggie
outtie  = aggie$out; outtie
count(outtie)
length(outtie)
fit <- rpart(diabetes ~ age + hypertension + heart_disease + bmi + HbA1c_level + blood_glucose_level,
method = "class",
data = data,
control = rpart.control(cp = 0.001),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
predict(fit, diabetes, type = "class")
fit <- rpart(diabetes ~ age + hypertension + heart_disease + bmi + HbA1c_level + blood_glucose_level,
method = "class",
data = data,
control = rpart.control(cp = 0.001),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
prediction = predict(fit, new.data = data[,1:8], type = "class")
confusion.matrix = table(prediction, data[,9])
confusion.matrix
accuracy = sum(diag(confusion.matrix))/sum(confusion.matrix)
accuracy
fit <- rpart(diabetes ~ age + hypertension + heart_disease + bmi + HbA1c_level + blood_glucose_level,
method = "class",
data = data,
control = rpart.control(cp = 0.001),
parms = list(split = "information"))
rpart.plot(fit , type =4, extra =2, clip.right.labs =FALSE , varlen =0, faclen =0)
prediction = predict(fit, new.data = data[,1:8], type = "class")
confusion.matrix = table(prediction, data[,9])
confusion.matrix
accuracy = sum(diag(confusion.matrix))/sum(confusion.matrix)
accuracy
